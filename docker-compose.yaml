services:
  # PostgreSQL Database
  postgres:
    image: postgres:18
    container_name: threat-detector-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - threat-detector-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: threat-detector-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - threat-detector-network

  # ML Model Service (Python/FastAPI)
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    container_name: threat-detector-ml
    ports:
      - "8000:8000"
    environment:
      - MODEL_PATH=${MODEL_PATH}
      - LOG_LEVEL=${LOG_LEVEL}
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - threat-detector-network

  # Data Ingestion Service (Go)
  ingestion-service:
    build:
      context: ./ingestion-service
      dockerfile: Dockerfile
    container_name: threat-detector-ingestion
    ports:
      - "8081:8080"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - ML_SERVICE_URL=${ML_SERVICE_URL}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ml-service:
        condition: service_healthy
    networks:
      - threat-detector-network

  # API Gateway (Go)
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: threat-detector-api
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - INGESTION_SERVICE_URL=${INGESTION_SERVICE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - API_KEY=${API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ingestion-service:
        condition: service_started
    networks:
      - threat-detector-network

  # React Dashboard
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL}
    container_name: threat-detector-dashboard
    ports:
      - "8888:80"
    depends_on:
      - api-gateway
    networks:
      - threat-detector-network

volumes:
  postgres_data:

networks:
  threat-detector-network:
    driver: bridge