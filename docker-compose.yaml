version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: threat-detector-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: threat_detector
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: threat-detector-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ML Model Service (Python/FastAPI)
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    container_name: threat-detector-ml
    ports:
      - "8000:8000"
    environment:
      - MODEL_PATH=/app/model/rf_model.pkl
      - LOG_LEVEL=info
    volumes:
      - ./ml-service:/app
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Data Ingestion Service (Go)
  ingestion-service:
    build:
      context: ./ingestion-service
      dockerfile: Dockerfile
    container_name: threat-detector-ingestion
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/threat_detector?sslmode=disable
      - REDIS_URL=redis:6379
      - ML_SERVICE_URL=http://ml-service:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ml-service:
        condition: service_healthy
    volumes:
      - ./ingestion-service:/app

  # API Gateway (Go)
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: threat-detector-api
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/threat_detector?sslmode=disable
      - REDIS_URL=redis:6379
      - INGESTION_SERVICE_URL=http://ingestion-service:8080
      - JWT_SECRET=your-secret-key-change-in-production
      - API_KEY=dev-api-key-12345
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ingestion-service:
        condition: service_started
    volumes:
      - ./api-gateway:/app

  # React Dashboard
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: threat-detector-dashboard
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=http://localhost:3000/api/v1
    depends_on:
      - api-gateway
    volumes:
      - ./dashboard:/app
      - /app/node_modules

volumes:
  postgres_data:

networks:
  default:
    name: threat-detector-network
